function [x_sym, y_sym] = symmetric_point(A, B, P)
    %A=[x,y]:为前把手的笛卡尔 坐标点
    %B=[x,y]:为后把手的笛卡尔 坐标点
    % p 为需要对称的点的坐标
    % 输入: A, B为两个点，定义直线；P为给定点 [x, y]
    % 输出: P关于直线的对称点 [x_sym, y_sym]

    % 提取直线的两个点坐标
    x1 = A(1);
    y1 = A(2);
    x2 = B(1);
    y2 = B(2);

    % 提取给定点P的坐标，靠近 原点 方向 弧线内侧上的点
    x0 = P(1);
    y0 = P(2);

    % 判断是否为竖直线
    if x1 == x2
        % 如果是竖直线，对称点在x轴方向镜像
        x_sym = 2 * x1 - x0;
        y_sym = y0; % y值不变
    else
        % 计算直线的斜率和截距
        m = (y2 - y1) / (x2 - x1);
        b = y1 - m * x1;

        % 计算垂足点T的坐标
        xt = (x0 + m * (y0 - b)) / (1 + m ^ 2);

        yt = (m * (x0 + m * (y0 - b))) / (1 + m ^ 2) + b;

        % 计算对称点P'的坐标
        x_sym = 2 * xt - x0;
        y_sym = 2 * yt - y0;
    end

end
